/*brute force method, O(n^2)*/ 

const nums = [1, 2, 3, 4, 5, 6, 7]
const target = 6

function twoSum (){
    for (let i = 0; i < nums.length; i++){
        for (let j = i + 1; j < nums.length; j++){
            if (nums[i] + nums[j] === target){
                return [i, j]
            }
        }
    } if (nums.length === 0){
        return ["No solution found"]
    } 
    
}
console.log(twoSum(nums, target))

/* hash map method O(n)*/

function twoSumhash (nums, target){

    const numToindex = new Map ()
    
    for (let i = 0; i < nums.length; i++){
        const numMenostarget = target - nums[i];
        if (numToindex.has(numMenostarget)){
            return [numToindex.get(numMenostarget), i]
        } numToindex.set(nums[i], i)
    }
    return ["solution not found"]
}
console.log(twoSumhash(nums, target))